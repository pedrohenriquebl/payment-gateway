{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/pedro/Sites/fullcycle/next-frontend/src/app/invoices/create/create-invoice-action.ts"],"sourcesContent":["\"use server\";\n\nimport { revalidateTag } from \"next/cache\";\nimport { cookies } from \"next/headers\";\nimport { redirect } from \"next/navigation\";\n\nexport async function createInvoiceAction(formData: FormData) {\n  const cookiesStore = await cookies();\n  const apiKey = cookiesStore.get(\"apiKey\")?.value;\n\n  const amount = formData.get(\"amount\")?.toString().replace(\",\", \".\");\n  const description = formData.get(\"description\");\n  const cardNumber = formData.get(\"cardNumber\");\n  const [expiryMonth, expiryYear] = formData\n    .get(\"expiryDate\")!\n    .toString()\n    .split(\"/\");\n  const cvv = formData.get(\"cvv\");\n  const cardholderName = formData.get(\"cardholderName\");\n\n  const response = await fetch(\"http://localhost:8080/invoice\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"X-API-Key\": apiKey as string,\n    },\n    body: JSON.stringify({\n      amount: parseFloat(amount as string),\n      description,\n      card_number: cardNumber,\n      expiry_month: parseInt(expiryMonth as string),\n      expiry_year: parseInt(expiryYear as string),\n      cvv,\n      cardholder_name: cardholderName,\n      payment_type: \"credit_card\",\n    }),\n  });\n\n  if (!response.ok) {\n    console.error(\"Error creating invoice:\", await response.text());\n    throw new Error(\"Failed to create invoice\");\n  }\n\n  const data = await response.json();\n\n  revalidateTag(`accounts/${apiKey}/invoices`);\n  revalidateTag(`accounts/${apiKey}/invoices/${data.id}`)\n\n  redirect(\"/invoices\");\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAAA;;;;;;;AAEO,eAAe,uCAAiB,GAAjB,oBAAoB,QAAkB;IAC1D,MAAM,eAAe,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IACjC,MAAM,SAAS,aAAa,GAAG,CAAC,WAAW;IAE3C,MAAM,SAAS,SAAS,GAAG,CAAC,WAAW,WAAW,QAAQ,KAAK;IAC/D,MAAM,cAAc,SAAS,GAAG,CAAC;IACjC,MAAM,aAAa,SAAS,GAAG,CAAC;IAChC,MAAM,CAAC,aAAa,WAAW,GAAG,SAC/B,GAAG,CAAC,cACJ,QAAQ,GACR,KAAK,CAAC;IACT,MAAM,MAAM,SAAS,GAAG,CAAC;IACzB,MAAM,iBAAiB,SAAS,GAAG,CAAC;IAEpC,MAAM,WAAW,MAAM,MAAM,iCAAiC;QAC5D,QAAQ;QACR,SAAS;YACP,gBAAgB;YAChB,aAAa;QACf;QACA,MAAM,KAAK,SAAS,CAAC;YACnB,QAAQ,WAAW;YACnB;YACA,aAAa;YACb,cAAc,SAAS;YACvB,aAAa,SAAS;YACtB;YACA,iBAAiB;YACjB,cAAc;QAChB;IACF;IAEA,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,QAAQ,KAAK,CAAC,2BAA2B,MAAM,SAAS,IAAI;QAC5D,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,OAAO,MAAM,SAAS,IAAI;IAEhC,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE,CAAC,SAAS,EAAE,OAAO,SAAS,CAAC;IAC3C,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD,EAAE,CAAC,SAAS,EAAE,OAAO,UAAU,EAAE,KAAK,EAAE,EAAE;IAEtD,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;AACX;;;IA3CsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///home/pedro/Sites/fullcycle/next-frontend/src/app/invoices/create/InvoiceForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InvoiceForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call InvoiceForm() from the server but InvoiceForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/invoices/create/InvoiceForm.tsx <module evaluation>\",\n    \"InvoiceForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yEACA","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///home/pedro/Sites/fullcycle/next-frontend/src/app/invoices/create/InvoiceForm.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const InvoiceForm = registerClientReference(\n    function() { throw new Error(\"Attempted to call InvoiceForm() from the server but InvoiceForm is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/invoices/create/InvoiceForm.tsx\",\n    \"InvoiceForm\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qDACA","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///home/pedro/Sites/fullcycle/next-frontend/src/app/invoices/create/page.tsx"],"sourcesContent":["import type React from \"react\";\nimport { InvoiceForm } from \"./InvoiceForm\";\n\nexport default function CreateInvoicePage() {\n  return (\n    <div className=\"bg-[#1e293b] rounded-lg p-6 border border-gray-800\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-white mb-1\">Nova Fatura</h1>\n        <p className=\"text-gray-400\">\n          Preencha os dados abaixo para processar um novo pagamento\n        </p>\n      </div>\n\n      <InvoiceForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAqC;;;;;;kCACnD,8OAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;0BAK/B,8OAAC,gJAAA,CAAA,cAAW;;;;;;;;;;;AAGlB","debugId":null}}]
}